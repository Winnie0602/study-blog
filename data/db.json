{
  "posts": [
    {
      "id": 1,
      "title": "優雅的 Await、Async",
      "body": "昨日介紹完了 Promise，今日要來介紹 ES7 的 await、async，但是進入主題之前，我們先來想想 Promise 為了改善非同步的處理，它做了什麼事情。先從最根本的原因開始，JS 是屬於同步執行，但是遇到費時的操作，勢必得採取非同步處理，不然就會變成這樣:如果 AJAX 是採取同步執行，那麼在取回資料前，接下來的程式都不會接著執行，除非 AJAX 完成，這也造成了整個程式堵塞住。",
      "tags": [
        "Javascript",
        "前端"
      ]
    },
    {
      "id": 2,
      "title": "從傳紙條輕鬆學習基本網路概念",
      "body": "每當提到「網路概念」這幾個字，就會想起以前上計算機概論的時候，一大堆名詞排山倒海而來OSI 七層網路模型、TCP/IP 四層、三次握手…雖然說有個大概的感覺，但還是不知道那些理論到底在幹嘛。一直到很後來，我看到一篇利用傳紙條來解釋 HTTPS 原理的文章，才被打通任督二脈，並且察覺到利用「傳紙條」這個很生活化的例子，可以很好地去解釋 TCP/IP、HTTP 或甚至是任何跟網路有關的東西。希望透過這一系列的傳紙條小故事，可以讓大家理解什麼是 TCP/IP，什麼又是 HTTP 協定，以及這些東西到底是為了什麼而誕生的。雖然說希望讀者沒有任何相關背景也能看懂，但其實比較適合已經大概知道什麼是 TCP/IP 以及 HTTP 的讀者觀看，會比較容易知道這一篇到底在講什麼。",
      "tags": [
        "前端"
      ]
    },
    {
      "title": "HTML到底是什麼？",
      "body": "本質上，HTML 是一種非常簡單的語言，由元素所組成。元素可以賦予文字片段不同的意義 (比方說，將它們描述成段落、項目清單，或是表格的一部分)、將文件組織成不同的邏輯區段 (如標頭(header)、三行的內文，或是導覽目錄)，以及在網頁中嵌入圖片或影片等內容。在這個主題中我們將介紹前面兩項，並介紹基本概念以及語法以讓你了解 HTML。HTML 文件的 head 是在網頁加載完畢之後，不會顯示在瀏覽器上的部分。其中包含一些資訊，如頁面的標題(<title> (en-US))、CSS 的連結 (當你想利用 CSS 來妝點你的頁面 HTML 時，你會用到它們)、網頁圖示(favicon)的連結，以及 metadata (裡頭承載了有關於該 HTML 的資料，如作者、描述該文件的關鍵詞等。)在 HTML 中還有許多可以用來格式化文字的元素，但我們沒有在 HTML 文字的基礎知識中提及這些內容。雖然這些元素比較鮮為人知，不過還是相當值得一談。在這篇文章中，你將會學到如何表示引言、描述列表、程式碼、上下標，及聯繫訊息等等。",
      "tags": [
        "Javascript",
        "frontEnd"
      ],
      "id": 3
    },
    {
      "title": "CSS到底是什麼?",
      "body": "CSS（階層式樣式表）被用來設定網頁的樣式及佈局。舉例來說，改變字體、顏色、尺寸以及擺放您的內容、拆分為多欄，或是添加動畫效果和其它裝飾的特性。這個單元提供一個平緩的學習路徑，透過介紹 CSS 的工作原理、語法的樣式，以及如何在 HTML 中添加樣式設定。",
      "tags": [
        "HTML"
      ],
      "id": 4
    },
    {
      "title": "js中的 substr方法與substring方法 不同",
      "body": "一個參數時： 二者同為 從 第參數個 開始截取，一直到str 末尾，並返回。 二個參數時： substr(a,b): 從第a個字元開始， 截取b個。 substring(a,b): 從第a個字元開始，一直截取到第b個。",
      "tags": [
        "Javascript",
        "frontEnd"
      ],
      "id": 6
    },
    {
      "title": "變數型別",
      "body": "簡單二分法\n非基本型別(Primitives)即物件(Object)\n先從大方向分類，這樣是不是比較好記了~\n那基本型別又包含了哪些呢?\n\n基本型別\nString(文字)\nNumber(數字)\nBoolean(true/false)\nundefined\nnull",
      "tags": [
        "Javascript"
      ],
      "id": 7
    },
    {
      "title": "Variable Scope",
      "body": "C 語系\n在其他程式語言像是 C 語系中，變數的活動範圍(scope)為區塊(block)，也就是在每個 { } 中，都屬於一個新的活動範圍。\n\n例如下面的範例中，依序輸出 1、0，而不會提示說重複宣告。",
      "tags": [
        "Javascript"
      ],
      "id": 8
    }
  ]
}